This file is part of MXE. See LICENSE.md for licensing information.

Contains ad hoc patches for cross building.

From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Kleis Auke Wolthuizen <github@kleisauke.nl>
Date: Tue, 16 Apr 2024 15:51:34 +0000
Subject: [PATCH 1/1] std: revert use of `raw-dylib`

See:
https://github.com/msys2/MINGW-packages/issues/21017
https://github.com/rust-lang/rust/issues/129020

diff --git a/library/std/src/sys/pal/windows/c.rs b/library/std/src/sys/pal/windows/c.rs
index 1111111..2222222 100644
--- a/library/std/src/sys/pal/windows/c.rs
+++ b/library/std/src/sys/pal/windows/c.rs
@@ -108,13 +108,8 @@ if #[cfg(not(target_vendor = "uwp"))] {
 }
 }
 
-// Use raw-dylib to import ProcessPrng as we can't rely on there being an import library.
 #[cfg(not(target_vendor = "win7"))]
-#[cfg_attr(
-    target_arch = "x86",
-    link(name = "bcryptprimitives", kind = "raw-dylib", import_name_type = "undecorated")
-)]
-#[cfg_attr(not(target_arch = "x86"), link(name = "bcryptprimitives", kind = "raw-dylib"))]
+#[link(name = "bcryptprimitives")]
 extern "system" {
     pub fn ProcessPrng(pbdata: *mut u8, cbdata: usize) -> BOOL;
 }
@@ -151,19 +146,7 @@ compat_fn_with_fallback! {
 }
 
 #[cfg(not(target_vendor = "win7"))]
-// Use raw-dylib to import synchronization functions to workaround issues with the older mingw import library.
-#[cfg_attr(
-    target_arch = "x86",
-    link(
-        name = "api-ms-win-core-synch-l1-2-0",
-        kind = "raw-dylib",
-        import_name_type = "undecorated"
-    )
-)]
-#[cfg_attr(
-    not(target_arch = "x86"),
-    link(name = "api-ms-win-core-synch-l1-2-0", kind = "raw-dylib")
-)]
+#[link(name = "synchronization")]
 extern "system" {
     pub fn WaitOnAddress(
         address: *const c_void,
